/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as TrophyApi from "..";
export interface MetricEventLeaderboardResponse {
    /** The end date of the current run of the leaderboard, or null if the run never ends. */
    end?: string;
    /** The user's rank in the leaderboard, or null if the user is not on the leaderboard. */
    rank?: number;
    /** The user's rank in the leaderboard before the event, or null if the user was not on the leaderboard before the event. */
    previousRank?: number;
    /** The minimum value required to enter the leaderboard according to its current rankings. */
    threshold: number;
    /** The unique ID of the leaderboard. */
    id: string;
    /** The user-facing name of the leaderboard. */
    name: string;
    /** The unique key used to reference the leaderboard in APIs. */
    key: string;
    /** The status of the leaderboard. */
    status?: TrophyApi.LeaderboardResponseStatus;
    /** What the leaderboard ranks by. */
    rankBy: TrophyApi.LeaderboardResponseRankBy;
    /** The key of the metric to rank by, if rankBy is 'metric'. */
    metricKey?: string;
    /** The name of the metric to rank by, if rankBy is 'metric'. */
    metricName?: string;
    /** The key of the points system to rank by, if rankBy is 'points'. */
    pointsSystemKey?: string;
    /** The name of the points system to rank by, if rankBy is 'points'. */
    pointsSystemName?: string;
    /** The user-facing description of the leaderboard. */
    description?: string;
    /** The start date of the leaderboard in YYYY-MM-DD format. */
    start: string;
    /** The maximum number of participants in the leaderboard. */
    maxParticipants: number;
    /** The repetition type for recurring leaderboards, or null for one-time leaderboards. */
    runUnit?: string;
    /** The interval between repetitions, relative to the start date and repetition type. */
    runInterval: number;
}
