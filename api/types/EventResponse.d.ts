/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as TrophyApi from "..";
export interface EventResponse {
    /** The unique ID of the event. */
    eventId: string;
    /** The unique ID of the metric that was updated. */
    metricId: string;
    /** The user's new total progress against the metric. */
    total: number;
    /** Achievements completed as a result of this event. */
    achievements?: TrophyApi.CompletedAchievementResponse[];
    /** The user's current streak for the metric, if the metric has streaks enabled. */
    currentStreak?: TrophyApi.MetricEventStreakResponse;
    /** A map of points systems by key that were affected by this event. */
    points?: Record<string, TrophyApi.MetricEventPointsResponse>;
    /** The idempotency key used for the event, if one was provided. */
    idempotencyKey?: string;
    /** Whether the event was replayed due to idempotency. */
    idempotentReplayed?: boolean;
}
